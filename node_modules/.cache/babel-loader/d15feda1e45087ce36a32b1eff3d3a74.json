{"ast":null,"code":"export const createExperiece = experience => {\n  return (dispatch, getState) => {\n    //make async call to db\n    //{...experience add the user id and teh rest}\n    fetch(\"http://localhost:8000/experiences/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(experience)\n    }).then(() => {\n      console.log(\"uploaded to server succesfully\"); //what to do next....eg: history.push('/');\n    }).then(() => {\n      dispatch({\n        type: \"CREATE_EXPERIENCE\",\n        experience\n      });\n    }).catch(err => {\n      dispatch({\n        type: \"CREATE_EXPERIENCE_ERROR\",\n        err\n      });\n    });\n  };\n};\nexport const fetchExperiences = () => {\n  return (dispatch, getState) => {\n    //make async call to db\n    //{...experience add the user id and teh rest}\n    fetch(\"http://localhost:8000/experiences/\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      } // body: JSON.stringify(experience),\n\n    }).then(data => {\n      console.log(\"downloaded from server succesfully\");\n      dispatch({\n        type: \"FETCH_EXPERIENCES\"\n      }); //what to do next....eg: history.push('/');\n    }).then(() => {// dispatch({ type: \"FETCH_EXPERIENCES\" });\n    }).catch(err => {\n      dispatch({\n        type: \"CREATE_EXPERIENCE_ERROR\",\n        err\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/leftee/Documents/GitHub/transcript_ashesi_/src/Redux/actions/experienceActions.js"],"names":["createExperiece","experience","dispatch","getState","fetch","method","headers","body","JSON","stringify","then","console","log","type","catch","err","fetchExperiences","data"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAIC,UAAD,IAAgB;AAC7C,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC7B;AAEA;AACAC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFiC;AAG1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,UAAf;AAHoC,KAAvC,CAAL,CAKGS,IALH,CAKQ,MAAM;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EADU,CAEV;AACD,KARH,EASGF,IATH,CASQ,MAAM;AACVR,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE,mBAAR;AAA6BZ,QAAAA;AAA7B,OAAD,CAAR;AACD,KAXH,EAYGa,KAZH,CAYUC,GAAD,IAAS;AACdb,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE,yBAAR;AAAmCE,QAAAA;AAAnC,OAAD,CAAR;AACD,KAdH;AAeD,GAnBD;AAoBD,CArBM;AAuBP,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,SAAO,CAACd,QAAD,EAAWC,QAAX,KAAwB;AAC7B;AAEA;AACAC,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,KADkC;AAE1CC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFiC,CAG1C;;AAH0C,KAAvC,CAAL,CAKGI,IALH,CAKSO,IAAD,IAAU;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAV,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR,CAFc,CAGd;AACD,KATH,EAUGH,IAVH,CAUQ,MAAM,CACV;AACD,KAZH,EAaGI,KAbH,CAaUC,GAAD,IAAS;AACdb,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE,yBAAR;AAAmCE,QAAAA;AAAnC,OAAD,CAAR;AACD,KAfH;AAgBD,GApBD;AAqBD,CAtBM","sourcesContent":["export const createExperiece = (experience) => {\n  return (dispatch, getState) => {\n    //make async call to db\n\n    //{...experience add the user id and teh rest}\n    fetch(\"http://localhost:8000/experiences/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(experience),\n    })\n      .then(() => {\n        console.log(\"uploaded to server succesfully\");\n        //what to do next....eg: history.push('/');\n      })\n      .then(() => {\n        dispatch({ type: \"CREATE_EXPERIENCE\", experience });\n      })\n      .catch((err) => {\n        dispatch({ type: \"CREATE_EXPERIENCE_ERROR\", err });\n      });\n  };\n};\n\nexport const fetchExperiences = () => {\n  return (dispatch, getState) => {\n    //make async call to db\n\n    //{...experience add the user id and teh rest}\n    fetch(\"http://localhost:8000/experiences/\", {\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n      // body: JSON.stringify(experience),\n    })\n      .then((data) => {\n        console.log(\"downloaded from server succesfully\");\n        dispatch({ type: \"FETCH_EXPERIENCES\" });\n        //what to do next....eg: history.push('/');\n      })\n      .then(() => {\n        // dispatch({ type: \"FETCH_EXPERIENCES\" });\n      })\n      .catch((err) => {\n        dispatch({ type: \"CREATE_EXPERIENCE_ERROR\", err });\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}