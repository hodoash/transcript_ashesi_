{"ast":null,"code":"var _jsxFileName = \"/Users/leftee/Documents/GitHub/transcript_ashesi_/src/Components/SideForm/InputForm.js\";\nimport React, { Component, useState } from \"react\";\nimport DragAndDrop from \"../DragAndDrop\";\nimport { createExperiece } from \"../../Redux/actions/experienceActions\";\nimport { connect } from \"react-redux\"; // cuid is a simple library to generate unique IDs\n\nimport cuid from \"cuid\";\nimport \"./InputForm.css\";\nimport { Highlight } from \"@material-ui/icons\";\nimport UploadedImage from \"../UploadedImage\"; // import { Component } from \"react\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      hours: \"\",\n      refName: \"\",\n      discription: \"\",\n      refContact: \"\",\n      year: \"2018\",\n      category: \"SCHOLARSHIP\",\n      isHighlight: false //image_:\"\"\n\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // const experience = {\n      //   year,\n      //   category,\n      //   discription,\n      //   hours,\n      //   refName,\n      //   refContact,\n      //   isHighlight,\n      //   id:cuid()\n      // }; //add all the form fields here\n      // console.log(\"jhgfhgfdhgfdhgf\")\n      // console.log(image_)\n      // const image={\n      //   uid,\n      //   eid,\n      //   iLink:image_,\n      //   id:cuid()\n      // }\n      // this.props.createExperiece(this.state);\n      // fetch(\"http://localhost:8000/experiences/\", {\n      //   method: \"POST\",\n      //   headers: { \"Content-Type\": \"application/json\" },\n      //   body: JSON.stringify(experience),\n      // }).then(() => {\n      //   console.log(\"uploaded to server succesfully\");\n      //   //what to do next....eg: history.push('/');\n      // });\n      // fetch(\"//http://localhost:8000/images/\", {\n      //   method: \"POST\",\n      //   headers: { \"Content-Type\": \"application/json\" },\n      //   body: JSON.stringify(image),\n      // }).then(() => {\n      //   console.log(\"uploaded to server succesfully\");\n      //   //what to do next....eg: history.push('/');\n      // });\n    };\n  }\n\n  // useEffect(()=>{\n  //   console.log(\"this happened because of image\");\n  //   console.log(image_);\n  // },[image_])\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FormInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transcript Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: \"Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.year,\n          id: \"year\",\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year1\",\n            children: \"2018\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year2\",\n            children: \"2019\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year3\",\n            children: \"2020\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year4\",\n            children: \"2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.category,\n          id: \"category\",\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cat1\",\n            children: \"LEADERSHIP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cat2\",\n            children: \"CITIZENSHIP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cat3\",\n            children: \"SCHOLARSHIP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: \"Brief Discription:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          maxLength: \"120\",\n          value: this.discription,\n          id: \"discription\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: \"Number of Hours:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          required: true,\n          id: \"hours\",\n          value: this.hours,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: \"Reference Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          id: \"refName\",\n          value: this.refName,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: \"Reference Contact:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          required: true,\n          id: \"refContact\",\n          maxLength: \"40\",\n          value: this.refContact,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: \"Add as a major Highlight:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"isHighlight\",\n            value: this.isHighlight,\n            onChange: this.handleChange //(e.target.value)}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add to transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  } // };\n\n\n} // const mapDispatchToProps = (dispatch) => {\n//   return {\n//     createExperiece: (experience) => dispatch(createExperiece(experience)),\n//   };\n// };\n\n\nexport default InputForm;","map":{"version":3,"sources":["/Users/leftee/Documents/GitHub/transcript_ashesi_/src/Components/SideForm/InputForm.js"],"names":["React","Component","useState","DragAndDrop","createExperiece","connect","cuid","Highlight","UploadedImage","InputForm","state","hours","refName","discription","refContact","year","category","isHighlight","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport DragAndDrop from \"../DragAndDrop\";\nimport { createExperiece } from \"../../Redux/actions/experienceActions\";\nimport { connect } from \"react-redux\";\n// cuid is a simple library to generate unique IDs\nimport cuid from \"cuid\";\nimport \"./InputForm.css\";\nimport { Highlight } from \"@material-ui/icons\";\nimport UploadedImage from \"../UploadedImage\";\n// import { Component } from \"react\";\n\nclass InputForm extends Component {\n  // render=()=>()=>{\n  state = {\n    hours: \"\",\n    refName: \"\",\n    discription: \"\",\n    refContact: \"\",\n    year: \"2018\",\n    category: \"SCHOLARSHIP\",\n    isHighlight: false,\n    //image_:\"\"\n  };\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n  // const [discription, setDiscriptiion] = useState(\"\"); //add all the elemetns later\n  // const [hours, setHours] = useState(\"\");\n  // const [refName, setRefName] = useState(\"\");\n  // const [refContact, setRefContact] = useState(\"\");\n  // const [year, setYear] = useState(\"2018\");\n  // const [category, setCategory] = useState(\"SCHORLASHIP\");\n  // const [tempImage,setTempImage] = useState(\"\");\n\n  // const [isHighlight, setIsHighlight] = useState(false);\n  // const [isImage,setIsImage]=useState(false);\n  // const [image_, setImage] = useState([]); //   const [isHighlight, setHighlight] = useState(false); //false\n\n  // const onDrop = useCallback((acceptedFiles) => {\n  //   // Loop through accepted files\n  //   acceptedFiles.map((file) => {\n  //     // Initialize FileReader browser API\n  //     const reader = new FileReader();\n  //     // onload callback gets called after the reader reads the file data\n  //     reader.onload = function (e) {\n  //       // add the image into the state. Since FileReader reading process is asynchronous, its better to get the latest snapshot state (i.e., prevState) and update it.\n  //       setImage((prevState) => [\n  //         ...prevState,\n  //         { id: cuid(), src: e.target.result },\n  //       ]);\n  //       setIsImage(true);\n  //       //  console.log(image_);\n  //       setTempImage(e.target.result)\n\n  //     };\n  //     // Read the file as Data URL (since we accept only images)\n  //     reader.readAsDataURL(file);\n  //     // setIsImage(true);\n  //     return file;\n  //   });\n  // }, []);\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // const experience = {\n\n    //   year,\n    //   category,\n    //   discription,\n    //   hours,\n    //   refName,\n    //   refContact,\n    //   isHighlight,\n    //   id:cuid()\n\n    // }; //add all the form fields here\n    // console.log(\"jhgfhgfdhgfdhgf\")\n    // console.log(image_)\n    // const image={\n    //   uid,\n    //   eid,\n    //   iLink:image_,\n    //   id:cuid()\n\n    // }\n    // this.props.createExperiece(this.state);\n\n    // fetch(\"http://localhost:8000/experiences/\", {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(experience),\n    // }).then(() => {\n    //   console.log(\"uploaded to server succesfully\");\n    //   //what to do next....eg: history.push('/');\n    // });\n\n    // fetch(\"//http://localhost:8000/images/\", {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(image),\n    // }).then(() => {\n    //   console.log(\"uploaded to server succesfully\");\n    //   //what to do next....eg: history.push('/');\n    // });\n  };\n\n  // useEffect(()=>{\n  //   console.log(\"this happened because of image\");\n  //   console.log(image_);\n  // },[image_])\n  render() {\n    return (\n      <div className=\"FormInput\">\n        <h3>Transcript Data</h3>\n        <form className=\"\" onSubmit={this.handleSubmit}>\n          <label className=\"\">Year:</label>\n          <select value={this.year} id=\"year\" onChange={this.handleChange}>\n            <option value=\"year1\">2018</option>\n            <option value=\"year2\">2019</option>\n            <option value=\"year3\">2020</option>\n            <option value=\"year4\">2021</option>\n          </select>\n          <label className=\"\">Category:</label>\n          <select\n            value={this.category}\n            id=\"category\"\n            onChange={this.handleChange}\n          >\n            <option value=\"cat1\">LEADERSHIP</option>\n            <option value=\"cat2\">CITIZENSHIP</option>\n            <option value=\"cat3\">SCHOLARSHIP</option>\n          </select>\n          <label className=\"\">Brief Discription:</label>\n          <input\n            type=\"text\"\n            required\n            maxLength={\"120\"}\n            value={this.discription}\n            id=\"discription\"\n            onChange={this.handleChange}\n          />\n          <label className=\"\">Number of Hours:</label>\n          <input\n            type=\"number\"\n            required\n            id=\"hours\"\n            value={this.hours}\n            onChange={this.handleChange}\n          />\n          <label className=\"\">Reference Name:</label>\n          <input\n            type=\"text\"\n            required\n            id=\"refName\"\n            value={this.refName}\n            onChange={this.handleChange}\n          />\n          <label className=\"\">Reference Contact:</label>\n          <input\n            type=\"email\"\n            required\n            id=\"refContact\"\n            maxLength={\"40\"}\n            value={this.refContact}\n            onChange={this.handleChange}\n          />\n          <label className=\"\">Add as a major Highlight:</label>\n          <label className=\"switch\">\n            <input\n              type=\"checkbox\"\n              id=\"isHighlight\"\n              value={this.isHighlight}\n              onChange={this.handleChange} //(e.target.value)}\n            />\n            <span className=\"slider round\"></span>\n          </label>\n\n          {/* {this.state.isHighlight && (\n            <div>\n              <DragAndDrop onChange={(e)=>setImage(e.target.value)} onDrop={onDrop} accept={\"image/*\"} />\n              {isImage && <UploadedImage image={temp}/>}\n            </div>\n             \n          )}\n           */}\n\n          {/* <label className=\"\">Add Data to Transcript</label> */}\n          <button>Add to transcript</button>\n        </form>\n      </div>\n    );\n  }\n\n  // };\n}\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     createExperiece: (experience) => dispatch(createExperiece(experience)),\n//   };\n// };\nexport default InputForm;\n"]},"metadata":{},"sourceType":"module"}