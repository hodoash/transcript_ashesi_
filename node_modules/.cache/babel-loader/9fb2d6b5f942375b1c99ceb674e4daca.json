{"ast":null,"code":"var _jsxFileName = \"/Users/leftee/Documents/GitHub/transcript_ashesi_/src/Components/SideForm/InputForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport DragAndDrop from \"../DragAndDrop\"; // cuid is a simple library to generate unique IDs\n\nimport cuid from \"cuid\";\nimport \"./InputForm.css\";\nimport { Highlight } from \"@material-ui/icons\";\nimport UploadedImage from \"../UploadedImage\"; // function InputForm() {\n//     return (\n//         <div>\n//             this is the form section\n//         </div>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputForm = () => {\n  _s();\n\n  const [discription, setDiscriptiion] = useState(\"\"); //add all the elemetns later\n\n  const [hours, setHours] = useState(\"\");\n  const [refName, setRefName] = useState(\"\");\n  const [refContact, setRefContact] = useState(\"\");\n  const [year, setYear] = useState(\"2018\");\n  const [category, setCategory] = useState(\"SCHORLASHIP\");\n  const [isHighlight, setIsHighlight] = useState(false);\n  const [isImage, setIsImage] = useState(false);\n  const [image_, setImage] = useState([]); //   const [isHighlight, setHighlight] = useState(false); //false\n\n  const onDrop = useCallback(acceptedFiles => {\n    // Loop through accepted files\n    acceptedFiles.map(file => {\n      // Initialize FileReader browser API\n      const reader = new FileReader(); // onload callback gets called after the reader reads the file data\n\n      reader.onload = function (e) {\n        // add the image into the state. Since FileReader reading process is asynchronous, its better to get the latest snapshot state (i.e., prevState) and update it.\n        setImage(prevState => [...prevState, {\n          id: cuid(),\n          src: e.target.result\n        }]);\n      }; // Read the file as Data URL (since we accept only images)\n\n\n      reader.readAsDataURL(file);\n      setIsImage(true);\n      return file;\n    });\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const experience = {\n      year,\n      category,\n      discription,\n      hours,\n      refName,\n      refContact,\n      isHighlight,\n      id: cuid()\n    }; //add all the form fields here\n\n    console.log(\"jhgfhgfdhgfdhgf\");\n    console.log(image_); // const image={\n    //   uid,\n    //   eid,\n    //   iLink:image_,\n    //   id:cuid()\n    // }\n\n    fetch(\"http://localhost:8000/experiences/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(experience)\n    }).then(() => {\n      console.log(\"uploaded to server succesfully\"); //what to do next....eg: history.push('/');\n    }); // fetch(\"//http://localhost:8000/images/\", {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(image),\n    // }).then(() => {\n    //   console.log(\"uploaded to server succesfully\");\n    //   //what to do next....eg: history.push('/');\n    // });\n  };\n\n  useEffect(() => {\n    console.log(\"this happened because of image\");\n    console.log(onDrop.f);\n  }, [image_]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FormInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Transcript Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"\",\n        children: \"Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: year,\n        onChange: e => setYear(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"year1\",\n          children: \"2018\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"year2\",\n          children: \"2019\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"year3\",\n          children: \"2020\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"year4\",\n          children: \"2021\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"\",\n        children: \"Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: category,\n        onChange: e => setCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cat1\",\n          children: \"LEADERSHIP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cat2\",\n          children: \"CITIZENSHIP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"cat3\",\n          children: \"SCHOLARSHIP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"\",\n        children: \"Brief Discription:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        maxLength: \"120\",\n        value: discription,\n        onChange: e => setDiscriptiion(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"\",\n        children: \"Number of Hours:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        required: true,\n        value: hours,\n        onChange: e => setHours(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"\",\n        children: \"Reference Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: refName,\n        onChange: e => setRefName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"\",\n        children: \"Reference Contact:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        required: true,\n        maxLength: \"40\",\n        value: refContact,\n        onChange: e => setRefContact(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"\",\n        children: \"Add as a major Highlight:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          value: isHighlight,\n          onChange: e => setIsHighlight(prevState => !prevState) //(e.target.value)}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"slider round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), isHighlight && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DragAndDrop, {\n          onChange: e => setImage(e.target.value),\n          onDrop: onDrop,\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), isImage && /*#__PURE__*/_jsxDEV(UploadedImage, {\n          image: image_\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add to transcript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputForm, \"Sm9gF8bq2YQp65RvKo0i0MbuAX4=\");\n\n_c = InputForm;\nexport default InputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"sources":["/Users/leftee/Documents/GitHub/transcript_ashesi_/src/Components/SideForm/InputForm.js"],"names":["React","useState","useCallback","useEffect","DragAndDrop","cuid","Highlight","UploadedImage","InputForm","discription","setDiscriptiion","hours","setHours","refName","setRefName","refContact","setRefContact","year","setYear","category","setCategory","isHighlight","setIsHighlight","isImage","setIsImage","image_","setImage","onDrop","acceptedFiles","map","file","reader","FileReader","onload","e","prevState","id","src","target","result","readAsDataURL","handleSubmit","preventDefault","experience","console","log","fetch","method","headers","body","JSON","stringify","then","f","value"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport DragAndDrop from \"../DragAndDrop\";\n// cuid is a simple library to generate unique IDs\nimport cuid from \"cuid\";\nimport \"./InputForm.css\";\nimport { Highlight } from \"@material-ui/icons\";\nimport UploadedImage from \"../UploadedImage\";\n\n// function InputForm() {\n//     return (\n//         <div>\n//             this is the form section\n//         </div>\n//     )\n// }\n\nconst InputForm = () => {\n  const [discription, setDiscriptiion] = useState(\"\"); //add all the elemetns later\n  const [hours, setHours] = useState(\"\");\n  const [refName, setRefName] = useState(\"\");\n  const [refContact, setRefContact] = useState(\"\");\n  const [year, setYear] = useState(\"2018\");\n  const [category, setCategory] = useState(\"SCHORLASHIP\");\n\n  const [isHighlight, setIsHighlight] = useState(false);\n  const [isImage,setIsImage]=useState(false);\n  const [image_, setImage] = useState([]); //   const [isHighlight, setHighlight] = useState(false); //false\n\n  const onDrop = useCallback((acceptedFiles) => {\n    // Loop through accepted files\n    acceptedFiles.map((file) => {\n      // Initialize FileReader browser API\n      const reader = new FileReader();\n      // onload callback gets called after the reader reads the file data\n      reader.onload = function (e) {\n        // add the image into the state. Since FileReader reading process is asynchronous, its better to get the latest snapshot state (i.e., prevState) and update it.\n        setImage((prevState) => [\n          ...prevState,\n          { id: cuid(), src: e.target.result },\n        ]);\n      };\n      // Read the file as Data URL (since we accept only images)\n      reader.readAsDataURL(file);\n      setIsImage(true);\n      return file;\n    });\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const experience = {\n \n      year,\n      category,\n      discription,\n      hours,\n      refName,\n      refContact,\n      isHighlight,\n      id:cuid()\n   \n      \n    }; //add all the form fields here\n    console.log(\"jhgfhgfdhgfdhgf\")\n    console.log(image_)\n    // const image={\n    //   uid,\n    //   eid,\n    //   iLink:image_,\n    //   id:cuid()\n\n    // }\n    \n\n    fetch(\"http://localhost:8000/experiences/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(experience),\n    }).then(() => {\n      console.log(\"uploaded to server succesfully\");\n      //what to do next....eg: history.push('/');\n    });\n    // fetch(\"//http://localhost:8000/images/\", {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(image),\n    // }).then(() => {\n    //   console.log(\"uploaded to server succesfully\");\n    //   //what to do next....eg: history.push('/');\n    // });\n\n  };\n\n    useEffect(()=>{\n      console.log(\"this happened because of image\");\n      console.log(onDrop.f)\n    },[image_])\n\n  return (\n    <div className=\"FormInput\">\n      <h3>Transcript Data</h3>\n      <form className=\"\" onSubmit={handleSubmit}>\n        <label className=\"\">Year:</label>\n        <select value={year} onChange={(e) => setYear(e.target.value)}>\n          <option value=\"year1\">2018</option>\n          <option value=\"year2\">2019</option>\n          <option value=\"year3\">2020</option>\n          <option value=\"year4\">2021</option>\n        </select>\n        <label className=\"\">Category:</label>\n        <select value={category} onChange={(e) => setCategory(e.target.value)}>\n          <option value=\"cat1\">LEADERSHIP</option>\n          <option value=\"cat2\">CITIZENSHIP</option>\n          <option value=\"cat3\">SCHOLARSHIP</option>\n        </select>\n        <label className=\"\">Brief Discription:</label>\n        <input\n          type=\"text\"\n          required\n          maxLength={\"120\"}\n          value={discription}\n          onChange={(e) => setDiscriptiion(e.target.value)}\n        />\n        <label className=\"\">Number of Hours:</label>\n        <input\n          type=\"number\"\n          required\n          value={hours}\n          onChange={(e) => setHours(e.target.value)}\n        />\n        <label className=\"\">Reference Name:</label>\n        <input\n          type=\"text\"\n          required\n          value={refName}\n          onChange={(e) => setRefName(e.target.value)}\n        />\n        <label className=\"\">Reference Contact:</label>\n        <input\n          type=\"email\"\n          required\n          maxLength={\"40\"}\n          value={refContact}\n          onChange={(e) => setRefContact(e.target.value)}\n        />\n        <label className=\"\">Add as a major Highlight:</label>\n        <label className=\"switch\">\n          <input\n            type=\"checkbox\"\n            value={isHighlight}\n            onChange={(e) => setIsHighlight((prevState) => !prevState)} //(e.target.value)}\n          />\n          <span className=\"slider round\"></span>\n        </label>\n\n        {isHighlight && (\n          <div>\n            <DragAndDrop onChange={(e)=>setImage(e.target.value)} onDrop={onDrop} accept={\"image/*\"} />\n            {isImage && <UploadedImage image={image_}/>}\n          </div>\n           \n        )}\n        \n\n        {/* <label className=\"\">Add Data to Transcript</label> */}\n        <button>Add to transcript</button>\n      </form>\n    </div>\n  );\n};\nexport default InputForm;\n"]},"metadata":{},"sourceType":"module"}