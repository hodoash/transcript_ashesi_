{"ast":null,"code":"var _jsxFileName = \"/Users/leftee/Documents/GitHub/transcript_ashesi_/src/Components/SideForm/InputForm.js\";\nimport React, { Component, useState } from \"react\";\nimport DragAndDrop from \"../DragAndDrop\";\nimport { createExperiece } from \"../../Redux/actions/experienceActions\";\nimport { connect } from \"react-redux\"; // cuid is a simple library to generate unique IDs\n\nimport cuid from \"cuid\";\nimport \"./InputForm.css\";\nimport { Highlight } from \"@material-ui/icons\";\nimport UploadedImage from \"../UploadedImage\"; // import { Component } from \"react\";\n// function InputForm() {\n//     return (\n//         <div>\n//             this is the form section\n//         </div>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      hours: \"\",\n      refName: \"\",\n      discription: \"\",\n      refContact: \"\",\n      year: \"2018\",\n      category: \"SCHOLARSHIP\",\n      isHighlight: false //image_:\"\"\n\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // const experience = {\n      //   year,\n      //   category,\n      //   discription,\n      //   hours,\n      //   refName,\n      //   refContact,\n      //   isHighlight,\n      //   id:cuid()\n      // }; //add all the form fields here\n      // console.log(\"jhgfhgfdhgfdhgf\")\n      // console.log(image_)\n      // const image={\n      //   uid,\n      //   eid,\n      //   iLink:image_,\n      //   id:cuid()\n      // }\n\n      this.props.createExperiece(this.state); // fetch(\"http://localhost:8000/experiences/\", {\n      //   method: \"POST\",\n      //   headers: { \"Content-Type\": \"application/json\" },\n      //   body: JSON.stringify(experience),\n      // }).then(() => {\n      //   console.log(\"uploaded to server succesfully\");\n      //   //what to do next....eg: history.push('/');\n      // });\n      // fetch(\"//http://localhost:8000/images/\", {\n      //   method: \"POST\",\n      //   headers: { \"Content-Type\": \"application/json\" },\n      //   body: JSON.stringify(image),\n      // }).then(() => {\n      //   console.log(\"uploaded to server succesfully\");\n      //   //what to do next....eg: history.push('/');\n      // });\n    };\n  }\n\n  // useEffect(()=>{\n  //   console.log(\"this happened because of image\");\n  //   console.log(image_);\n  // },[image_])\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FormInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Transcript Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: \"Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.year,\n          id: \"year\",\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year1\",\n            children: \"2018\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year2\",\n            children: \"2019\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year3\",\n            children: \"2020\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"year4\",\n            children: \"2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: \"Category:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.category,\n          id: true,\n          onChange: e => this.setState({\n            category: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cat1\",\n            children: \"LEADERSHIP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cat2\",\n            children: \"CITIZENSHIP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cat3\",\n            children: \"SCHOLARSHIP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: \"Brief Discription:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          maxLength: \"120\",\n          value: this.state.discription,\n          onChange: e => this.setState({\n            discription: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: \"Number of Hours:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          required: true,\n          value: this.state.hours,\n          onChange: e => this.setState({\n            hours: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: \"Reference Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          required: true,\n          value: this.state.refName,\n          onChange: e => this.setState({\n            refName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: \"Reference Contact:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          required: true,\n          maxLength: \"40\",\n          value: this.state.refContact,\n          onChange: e => this.setState({\n            refContact: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"\",\n          children: \"Add as a major Highlight:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: this.state.isHighlight,\n            onChange: e => this.setState({\n              isHighlight: prevState => !prevState\n            }) //(e.target.value)}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add to transcript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  } // };\n\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createExperiece: experience => dispatch(createExperiece(experience))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(InputForm);","map":{"version":3,"sources":["/Users/leftee/Documents/GitHub/transcript_ashesi_/src/Components/SideForm/InputForm.js"],"names":["React","Component","useState","DragAndDrop","createExperiece","connect","cuid","Highlight","UploadedImage","InputForm","state","hours","refName","discription","refContact","year","category","isHighlight","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","props","render","prevState","mapDispatchToProps","dispatch","experience"],"mappings":"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","sourcesContent":["import React,{ Component,useState} from \"react\";\nimport DragAndDrop from \"../DragAndDrop\";\nimport { createExperiece } from \"../../Redux/actions/experienceActions\";\nimport { connect } from \"react-redux\";\n// cuid is a simple library to generate unique IDs\nimport cuid from \"cuid\";\nimport \"./InputForm.css\";\nimport { Highlight } from \"@material-ui/icons\";\nimport UploadedImage from \"../UploadedImage\";\n// import { Component } from \"react\";\n\n// function InputForm() {\n//     return (\n//         <div>\n//             this is the form section\n//         </div>\n//     )\n// }\n\nclass InputForm extends Component {\n  // render=()=>()=>{\n    state={\n      hours:\"\",\n      refName:\"\",\n      discription:\"\",\n      refContact:\"\",\n      year:\"2018\",\n      category:\"SCHOLARSHIP\",\n      isHighlight:false,\n      //image_:\"\"\n    };\n    handleChange=(e)=>{\n      this.setState({\n        [e.target.id]:e.target.value\n      })\n    }\n  // const [discription, setDiscriptiion] = useState(\"\"); //add all the elemetns later\n  // const [hours, setHours] = useState(\"\");\n  // const [refName, setRefName] = useState(\"\");\n  // const [refContact, setRefContact] = useState(\"\");\n  // const [year, setYear] = useState(\"2018\");\n  // const [category, setCategory] = useState(\"SCHORLASHIP\");\n  // const [tempImage,setTempImage] = useState(\"\");\n\n  // const [isHighlight, setIsHighlight] = useState(false);\n  // const [isImage,setIsImage]=useState(false);\n  // const [image_, setImage] = useState([]); //   const [isHighlight, setHighlight] = useState(false); //false\n\n  // const onDrop = useCallback((acceptedFiles) => {\n  //   // Loop through accepted files\n  //   acceptedFiles.map((file) => {\n  //     // Initialize FileReader browser API\n  //     const reader = new FileReader();\n  //     // onload callback gets called after the reader reads the file data\n  //     reader.onload = function (e) {\n  //       // add the image into the state. Since FileReader reading process is asynchronous, its better to get the latest snapshot state (i.e., prevState) and update it.\n  //       setImage((prevState) => [\n  //         ...prevState,\n  //         { id: cuid(), src: e.target.result },\n  //       ]);\n  //       setIsImage(true);\n  //       //  console.log(image_);\n  //       setTempImage(e.target.result)\n\n  //     };\n  //     // Read the file as Data URL (since we accept only images)\n  //     reader.readAsDataURL(file);\n  //     // setIsImage(true);\n  //     return file;\n  //   });\n  // }, []);\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // const experience = {\n \n    //   year,\n    //   category,\n    //   discription,\n    //   hours,\n    //   refName,\n    //   refContact,\n    //   isHighlight,\n    //   id:cuid()\n   \n      \n    // }; //add all the form fields here\n    // console.log(\"jhgfhgfdhgfdhgf\")\n    // console.log(image_)\n    // const image={\n    //   uid,\n    //   eid,\n    //   iLink:image_,\n    //   id:cuid()\n\n    // }\n    this.props.createExperiece(this.state)\n    \n\n    // fetch(\"http://localhost:8000/experiences/\", {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(experience),\n    // }).then(() => {\n    //   console.log(\"uploaded to server succesfully\");\n    //   //what to do next....eg: history.push('/');\n    // });\n\n    // fetch(\"//http://localhost:8000/images/\", {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(image),\n    // }).then(() => {\n    //   console.log(\"uploaded to server succesfully\");\n    //   //what to do next....eg: history.push('/');\n    // });\n\n  };\n\n    // useEffect(()=>{\n    //   console.log(\"this happened because of image\");\n    //   console.log(image_);\n    // },[image_])\n  render(){\n    return (\n      <div className=\"FormInput\">\n        <h3>Transcript Data</h3>\n        <form className=\"\" onSubmit={this.handleSubmit}>\n          <label className=\"\">Year:</label>\n          <select value={this.year} id=\"year\" onChange={this.handleChange}>\n            <option value=\"year1\">2018</option>\n            <option value=\"year2\">2019</option>\n            <option value=\"year3\">2020</option>\n            <option value=\"year4\">2021</option>\n          </select>\n          <label className=\"\">Category:</label>\n          <select value={this.category} id onChange={(e) => this.setState({category:e.target.value})}>\n            <option value=\"cat1\">LEADERSHIP</option>\n            <option value=\"cat2\">CITIZENSHIP</option>\n            <option value=\"cat3\">SCHOLARSHIP</option>\n          </select>\n          <label className=\"\">Brief Discription:</label>\n          <input\n            type=\"text\"\n            required\n            maxLength={\"120\"}\n            value={this.state.discription}\n            onChange={(e) => this.setState({discription:e.target.value})}\n          />\n          <label className=\"\">Number of Hours:</label>\n          <input\n            type=\"number\"\n            required\n            value={this.state.hours}\n            onChange={(e) => this.setState({hours:e.target.value})}\n          />\n          <label className=\"\">Reference Name:</label>\n          <input\n            type=\"text\"\n            required\n            value={this.state.refName}\n            onChange={(e) => this.setState({refName:e.target.value})}\n          />\n          <label className=\"\">Reference Contact:</label>\n          <input\n            type=\"email\"\n            required\n            maxLength={\"40\"}\n            value={this.state.refContact}\n            onChange={(e) => this.setState({refContact:e.target.value})}\n          />\n          <label className=\"\">Add as a major Highlight:</label>\n          <label className=\"switch\">\n            <input\n              type=\"checkbox\"\n              value={this.state.isHighlight}\n              onChange={(e) => this.setState({isHighlight:(prevState) => !prevState})} //(e.target.value)}\n            />\n            <span className=\"slider round\"></span>\n          </label>\n  \n          {/* {this.state.isHighlight && (\n            <div>\n              <DragAndDrop onChange={(e)=>setImage(e.target.value)} onDrop={onDrop} accept={\"image/*\"} />\n              {isImage && <UploadedImage image={temp}/>}\n            </div>\n             \n          )}\n           */}\n  \n          {/* <label className=\"\">Add Data to Transcript</label> */}\n          <button>Add to transcript</button>\n        </form>\n      </div>\n    );\n  }\n  \n// };\n  }\n  \nconst mapDispatchToProps=(dispatch)=>{\n   return{\n     createExperiece :(experience)=>dispatch(createExperiece(experience))\n   }\n}\nexport default connect(null,mapDispatchToProps)(InputForm);\n"]},"metadata":{},"sourceType":"module"}