{"ast":null,"code":"var _jsxFileName = \"/Users/leftee/Documents/GitHub/transcript_ashesi_/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { createTheme, ThemeProvider, makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport \"./App.css\";\nimport React, { Component, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Page1 from \"./Components/Pages/Page1\";\nimport Page2 from \"./Components/Pages/Page2\";\nimport InputForm from \"./Components/SideForm/InputForm\";\nimport TopNavSection from \"./Components/TopNav/TopNavSection\";\nimport { fetchExperiences } from \"./Redux/actions/experienceActions\"; //write code to fetch data from database into json file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  console.log(\"app level\", props.experiences);\n  useEffect(() => {\n    const fetchExperiences = async () => {\n      try {\n        const res = await fetch(\"http://localhost:8000/experiences/\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          } // body: JSON.stringify(experience),\n\n        });\n        const data = await res.json();\n        console;\n      } catch (error) {} //make async call to db\n\n\n      console.log(\"edfghjhgfd\"); //{...experience add the user id and teh rest}\n\n      fetch(\"http://localhost:8000/experiences/\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        } // body: JSON.stringify(experience),\n\n      }).then(Response => {\n        console.log(\"downloaded from server succesfully\", Response);\n        props.setExperiences(Response); //what to do next....eg: history.push('/');\n      }) // .then(() => {\n      //   // dispatch({ type: \"FETCH_EXPERIENCES\" });\n      // })\n      .catch(err => {});\n    };\n\n    fetchExperiences();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(TopNavSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      er: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Page1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Page2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    experiences: state.experiences\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setExperiences: payload => dispatch(fetchExperiences(payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/leftee/Documents/GitHub/transcript_ashesi_/src/App.js"],"names":["createTheme","ThemeProvider","makeStyles","Typography","React","Component","useEffect","connect","Page1","Page2","InputForm","TopNavSection","fetchExperiences","App","props","console","log","experiences","res","fetch","method","headers","data","json","error","then","Response","setExperiences","catch","err","mapStateToProps","state","mapDispatchToProps","dispatch","payload"],"mappings":";;;AAAA,SACEA,WADF,EAEEC,aAFF,EAGEC,UAHF,QAIO,0BAJP;AAKA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAO,WAAP;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SAASC,gBAAT,QAAiC,mCAAjC,C,CAEA;;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAK,CAACG,WAA/B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,gBAAgB,GAAG,YAAY;AAEnC,UAAI;AACF,cAAMM,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAuC;AAC5DC,UAAAA,MAAM,EAAE,KADoD;AAE5DC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAFmD,CAG5D;;AAH4D,SAAvC,CAAvB;AAMA,cAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AAEAR,QAAAA,OAAO;AACR,OAVD,CAUE,OAAOS,KAAP,EAAc,CAEf,CAdkC,CAenC;;;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAhBmC,CAiBnC;;AACAG,MAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,QAAAA,MAAM,EAAE,KADkC;AAE1CC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFiC,CAG1C;;AAH0C,OAAvC,CAAL,CAKGI,IALH,CAKSC,QAAD,IAAc;AAClBX,QAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDU,QAAlD;AACAZ,QAAAA,KAAK,CAACa,cAAN,CAAqBD,QAArB,EAFkB,CAGlB;AACD,OATH,EAUE;AACA;AACA;AAZF,OAaGE,KAbH,CAaUC,GAAD,IAAS,CAAE,CAbpB;AAcD,KAhCD;;AAkCAjB,IAAAA,gBAAgB;AACjB,GApCQ,EAoCN,EApCM,CAAT;AAsCA,sBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,4BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAjDD;;GAAMC,G;;KAAAA,G;;AAmDN,MAAMiB,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLd,IAAAA,WAAW,EAAEc,KAAK,CAACd;AADd,GAAP;AAGD,CAJD;;AAMA,MAAMe,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLN,IAAAA,cAAc,EAAGO,OAAD,IAAaD,QAAQ,CAACrB,gBAAgB,CAACsB,OAAD,CAAjB;AADhC,GAAP;AAGD,CAJD;;AAKA,eAAe3B,OAAO,CAACuB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,GAA7C,CAAf","sourcesContent":["import {\n  createTheme,\n  ThemeProvider,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport \"./App.css\";\n\nimport React, { Component, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Page1 from \"./Components/Pages/Page1\";\nimport Page2 from \"./Components/Pages/Page2\";\nimport InputForm from \"./Components/SideForm/InputForm\";\nimport TopNavSection from \"./Components/TopNav/TopNavSection\";\nimport { fetchExperiences } from \"./Redux/actions/experienceActions\";\n\n//write code to fetch data from database into json file\n\nconst App = (props) => {\n  console.log(\"app level\", props.experiences);\n\n  useEffect(() => {\n    const fetchExperiences = async () => {\n\n      try {\n        const res = await fetch(\"http://localhost:8000/experiences/\", {\n          method: \"GET\",\n          headers: { \"Content-Type\": \"application/json\" },\n          // body: JSON.stringify(experience),\n        })\n\n        const data = await res.json()\n\n        console\n      } catch (error) {\n        \n      }\n      //make async call to db\n      console.log(\"edfghjhgfd\");\n      //{...experience add the user id and teh rest}\n      fetch(\"http://localhost:8000/experiences/\", {\n        method: \"GET\",\n        headers: { \"Content-Type\": \"application/json\" },\n        // body: JSON.stringify(experience),\n      })\n        .then((Response) => {\n          console.log(\"downloaded from server succesfully\", Response);\n          props.setExperiences(Response);\n          //what to do next....eg: history.push('/');\n        })\n        // .then(() => {\n        //   // dispatch({ type: \"FETCH_EXPERIENCES\" });\n        // })\n        .catch((err) => {});\n    };\n\n    fetchExperiences();\n  }, []);\n\n  return (\n    <div className=\"\">\n      <TopNavSection />\n      <InputForm er />\n      <Page1 />\n      <Page2 />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    experiences: state.experiences,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setExperiences: (payload) => dispatch(fetchExperiences(payload)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}