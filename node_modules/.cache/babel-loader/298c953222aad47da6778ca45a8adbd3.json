{"ast":null,"code":"var _jsxFileName = \"/Users/leftee/Documents/GitHub/transcript_ashesi_/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { createTheme, ThemeProvider, makeStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport \"./App.css\";\nimport React, { Component, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Page1 from \"./Components/Pages/Page1\";\nimport Page2 from \"./Components/Pages/Page2\";\nimport InputForm from \"./Components/SideForm/InputForm\";\nimport TopNavSection from \"./Components/TopNav/TopNavSection\";\nimport { fetchExperiences } from \"./Redux/actions/experienceActions\"; // import { connect } from \"react-redux\";\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       main: \"#fff\",\n//     },\n//   },\n//   typography: {\n//     fontFamily: [\"Roboto\"],\n//     h4: {\n//       fontWeight: 600,\n//       fontSize: 28,\n//       lineHeight: \"2rem\",\n//     },\n//     h5: {\n//       fontWeight: 100,\n//       lineHeight: \"2rem\",\n//     },\n//   },\n// });\n// const styles = makeStyles({\n//   wrapper: {\n//     width: \"65%\",\n//     margin: \"auto\",\n//     textAlign: \"center\",\n//   },\n//   bigSpace: {\n//     marginTop: \"5rem\",\n//   },\n//   littleSpace: {\n//     marginTop: \"2.5rem\",\n//   },\n//   grid: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     flexWrap: \"wrap\",\n//   },\n// });\n// class App extends Component{\n//   render(){\n//     // const classes = styles();\n//     return (\n//       <div className=\"\">\n//         <TopNavSection />\n//         <InputForm er/>\n//         <Page1 />\n//         <Page2 />\n//       </div>\n//     );\n//   }\n//   }\n//write code to fetch data from database into json file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = props => {\n  _s();\n\n  console.log(\"app level\", props.experiences);\n  useEffect(() => {\n    const fetchExperiences = () => {\n      return (dispatch, getState) => {\n        //make async call to db\n        console.log(\"edfghjhgfd\"); //{...experience add the user id and teh rest}\n\n        fetch(\"http://localhost:8000/experiences/\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          } // body: JSON.stringify(experience),\n\n        }).then(Response => {\n          console.log(\"downloaded from server succesfully\");\n          dispatch({\n            type: \"FETCH_EXPERIENCES\",\n            Response\n          }); //what to do next....eg: history.push('/');\n        }) // .then(() => {\n        //   // dispatch({ type: \"FETCH_EXPERIENCES\" });\n        // })\n        .catch(err => {\n          dispatch({\n            type: \"CREATE_EXPERIENCE_ERROR\",\n            err\n          });\n        });\n      };\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(TopNavSection, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputForm, {\n      er: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Page1, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Page2, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\n\nconst mapStateToProps = state => {\n  return {\n    experiences: state.experiences\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getExperiences: () => dispatch(fetchExperiences())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/leftee/Documents/GitHub/transcript_ashesi_/src/App.js"],"names":["createTheme","ThemeProvider","makeStyles","Typography","React","Component","useEffect","connect","Page1","Page2","InputForm","TopNavSection","fetchExperiences","App","props","console","log","experiences","dispatch","getState","fetch","method","headers","then","Response","type","catch","err","mapStateToProps","state","mapDispatchToProps","getExperiences"],"mappings":";;;AAAA,SACEA,WADF,EAEEC,aAFF,EAGEC,UAHF,QAIO,0BAJP;AAKA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAO,WAAP;AAEA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SAASC,gBAAT,QAAiC,mCAAjC,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,KAAK,CAACG,WAA/B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,gBAAgB,GAAG,MAAM;AAC7B,aAAO,CAACM,QAAD,EAAWC,QAAX,KAAwB;AAC7B;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAF6B,CAG7B;;AACAI,QAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,UAAAA,MAAM,EAAE,KADkC;AAE1CC,UAAAA,OAAO,EAAE;AAAE,4BAAgB;AAAlB,WAFiC,CAG1C;;AAH0C,SAAvC,CAAL,CAKGC,IALH,CAKSC,QAAD,IAAc;AAClBT,UAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAE,UAAAA,QAAQ,CAAC;AAAEO,YAAAA,IAAI,EAAE,mBAAR;AAA6BD,YAAAA;AAA7B,WAAD,CAAR,CAFkB,CAGlB;AACD,SATH,EAUE;AACA;AACA;AAZF,SAaGE,KAbH,CAaUC,GAAD,IAAS;AACdT,UAAAA,QAAQ,CAAC;AAAEO,YAAAA,IAAI,EAAE,yBAAR;AAAmCE,YAAAA;AAAnC,WAAD,CAAR;AACD,SAfH;AAgBD,OApBD;AAqBD,KAtBD;AAuBD,GAxBQ,EAwBN,EAxBM,CAAT;AA0BA,sBACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,4BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,EAAE;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CArCD;;GAAMd,G;;KAAAA,G;;AAuCN,MAAMe,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLZ,IAAAA,WAAW,EAAEY,KAAK,CAACZ;AADd,GAAP;AAGD,CAJD;;AAMA,MAAMa,kBAAkB,GAAIZ,QAAD,IAAc;AACvC,SAAO;AACLa,IAAAA,cAAc,EAAE,MAAMb,QAAQ,CAACN,gBAAgB,EAAjB;AADzB,GAAP;AAGD,CAJD;;AAKA,eAAeL,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,GAA7C,CAAf","sourcesContent":["import {\n  createTheme,\n  ThemeProvider,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport \"./App.css\";\n\nimport React, { Component, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Page1 from \"./Components/Pages/Page1\";\nimport Page2 from \"./Components/Pages/Page2\";\nimport InputForm from \"./Components/SideForm/InputForm\";\nimport TopNavSection from \"./Components/TopNav/TopNavSection\";\nimport { fetchExperiences } from \"./Redux/actions/experienceActions\";\n\n// import { connect } from \"react-redux\";\n\n// const theme = createTheme({\n//   palette: {\n//     primary: {\n//       main: \"#fff\",\n//     },\n//   },\n//   typography: {\n//     fontFamily: [\"Roboto\"],\n//     h4: {\n//       fontWeight: 600,\n//       fontSize: 28,\n//       lineHeight: \"2rem\",\n//     },\n//     h5: {\n//       fontWeight: 100,\n//       lineHeight: \"2rem\",\n//     },\n//   },\n// });\n\n// const styles = makeStyles({\n//   wrapper: {\n//     width: \"65%\",\n//     margin: \"auto\",\n//     textAlign: \"center\",\n//   },\n//   bigSpace: {\n//     marginTop: \"5rem\",\n//   },\n//   littleSpace: {\n//     marginTop: \"2.5rem\",\n//   },\n//   grid: {\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     flexWrap: \"wrap\",\n//   },\n// });\n\n// class App extends Component{\n//   render(){\n//     // const classes = styles();\n//     return (\n//       <div className=\"\">\n//         <TopNavSection />\n//         <InputForm er/>\n//         <Page1 />\n//         <Page2 />\n//       </div>\n//     );\n//   }\n//   }\n//write code to fetch data from database into json file\n\nconst App = (props) => {\n  console.log(\"app level\", props.experiences);\n\n  useEffect(() => {\n    const fetchExperiences = () => {\n      return (dispatch, getState) => {\n        //make async call to db\n        console.log(\"edfghjhgfd\")\n        //{...experience add the user id and teh rest}\n        fetch(\"http://localhost:8000/experiences/\", {\n          method: \"GET\",\n          headers: { \"Content-Type\": \"application/json\" },\n          // body: JSON.stringify(experience),\n        })\n          .then((Response) => {\n            console.log(\"downloaded from server succesfully\");\n            dispatch({ type: \"FETCH_EXPERIENCES\", Response});\n            //what to do next....eg: history.push('/');\n          })\n          // .then(() => {\n          //   // dispatch({ type: \"FETCH_EXPERIENCES\" });\n          // })\n          .catch((err) => {\n            dispatch({ type: \"CREATE_EXPERIENCE_ERROR\", err });\n          });\n      };\n    };\n  }, []);\n\n  return (\n    <div className=\"\">\n      <TopNavSection />\n      <InputForm er />\n      <Page1 />\n      <Page2 />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    experiences: state.experiences,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getExperiences: () => dispatch(fetchExperiences()),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}