{"ast":null,"code":"const innitState = {\n  experiences: [// {\n    //   year: 1,\n    //   category: 2,\n    //   discription: \"Winner: Student Excellence Awards\",\n    //   hours: \"40\",\n    //   refName: \"Lebene Gbedawo\",\n    //   refContact: \"lebene.bed@ashesi.edu.gh\",\n    //   isHighlight: 0,\n    //   id: 1,\n    // },\n    // {\n    //   year: 2,\n    //   category: 2,\n    //   discription: \"Head of Communications Ashesi Start-up Launchpad\",\n    //   hours: \"40\",\n    //   refName: \"Lebene Gbedawo\",\n    //   refContact: \"lebene.bed@ashesi.edu.gh\",\n    //   isHighlight: 0,\n    //   id: 2,\n    // },\n    // {\n    //   year: 3,\n    //   category: 2,\n    //   discription:\n    //     \"Participant- Harvard Model United Nations (Boston) & Model United Nations KNUST (Kumasi)\",\n    //   hours: \"40\",\n    //   refName: \"Lebene Gbedawo\",\n    //   refContact: \"lebene.bed@ashesi.edu.gh\",\n    //   isHighlight: 0,\n    //   id: 3,\n    // },\n  ],\n  error: [null]\n};\n\nconst experienceReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : innitState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CREATE_EXPERIENCE\":\n      console.log(\"created exp on db\", action.experience);\n      console.log(\"adding to state\", action.experience);\n      return { ...state,\n        experiences: action.exper.state\n      };\n\n    case \"FETCH_EXPERIENCES\":\n      console.log(\"fetched exp from db\", action.experience);\n      return { ...state,\n        experiences: action.experience\n      };\n\n    case \"CREATE_EXPERIENCE_ERROR\":\n      console.log(\"create experience error\", action.err);\n      return { ...state,\n        error: action.err\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default experienceReducer;","map":{"version":3,"sources":["/Users/leftee/Documents/GitHub/transcript_ashesi_/src/Redux/reducers/experienceReducer.js"],"names":["innitState","experiences","error","experienceReducer","state","action","type","console","log","experience","exper","err"],"mappings":"AAAA,MAAMA,UAAU,GAAG;AACjBC,EAAAA,WAAW,EAAE,CACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BW,GADI;AAkCjBC,EAAAA,KAAK,EAAE,CAAC,IAAD;AAlCU,CAAnB;;AAqCA,MAAMC,iBAAiB,GAAG,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvBJ,UAAuB;AAAA,MAAXK,MAAW;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,mBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,MAAM,CAACI,UAAxC;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,MAAM,CAACI,UAAtC;AACA,aAAO,EAAE,GAAGL,KAAL;AAAYH,QAAAA,WAAW,EAAEI,MAAM,CAACK,KAAP,CAAaN;AAAtC,OAAP;;AAEF,SAAK,mBAAL;AACEG,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCH,MAAM,CAACI,UAA1C;AACA,aAAO,EAAE,GAAGL,KAAL;AAAYH,QAAAA,WAAW,EAAEI,MAAM,CAACI;AAAhC,OAAP;;AACF,SAAK,yBAAL;AACEF,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCH,MAAM,CAACM,GAA9C;AACA,aAAO,EAAE,GAAGP,KAAL;AAAYF,QAAAA,KAAK,EAAEG,MAAM,CAACM;AAA1B,OAAP;;AACF;AACE,aAAOP,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,eAAeD,iBAAf","sourcesContent":["const innitState = {\n  experiences: [\n    // {\n    //   year: 1,\n    //   category: 2,\n    //   discription: \"Winner: Student Excellence Awards\",\n    //   hours: \"40\",\n    //   refName: \"Lebene Gbedawo\",\n    //   refContact: \"lebene.bed@ashesi.edu.gh\",\n    //   isHighlight: 0,\n    //   id: 1,\n    // },\n    // {\n    //   year: 2,\n    //   category: 2,\n    //   discription: \"Head of Communications Ashesi Start-up Launchpad\",\n    //   hours: \"40\",\n    //   refName: \"Lebene Gbedawo\",\n    //   refContact: \"lebene.bed@ashesi.edu.gh\",\n    //   isHighlight: 0,\n    //   id: 2,\n    // },\n    // {\n    //   year: 3,\n    //   category: 2,\n    //   discription:\n    //     \"Participant- Harvard Model United Nations (Boston) & Model United Nations KNUST (Kumasi)\",\n    //   hours: \"40\",\n    //   refName: \"Lebene Gbedawo\",\n    //   refContact: \"lebene.bed@ashesi.edu.gh\",\n    //   isHighlight: 0,\n    //   id: 3,\n    // },\n  ],\n  error: [null],\n};\n\nconst experienceReducer = (state = innitState, action) => {\n  switch (action.type) {\n    case \"CREATE_EXPERIENCE\":\n      console.log(\"created exp on db\", action.experience);\n      console.log(\"adding to state\", action.experience);\n      return { ...state, experiences: action.exper.state };\n\n    case \"FETCH_EXPERIENCES\":\n      console.log(\"fetched exp from db\", action.experience);\n      return { ...state, experiences: action.experience };\n    case \"CREATE_EXPERIENCE_ERROR\":\n      console.log(\"create experience error\", action.err);\n      return { ...state, error: action.err };\n    default:\n      return state;\n  }\n};\n\nexport default experienceReducer;\n"]},"metadata":{},"sourceType":"module"}