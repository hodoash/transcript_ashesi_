{"ast":null,"code":"import React, { Component, useState } from \"react\";\nimport DragAndDrop from \"../DragAndDrop\";\nimport { createExperiece } from \"../../Redux/actions/experienceActions\";\nimport { connect } from \"react-redux\"; // cuid is a simple library to generate unique IDs\n\nimport cuid from \"cuid\";\nimport \"./InputForm.css\";\nimport { Highlight } from \"@material-ui/icons\";\nimport UploadedImage from \"../UploadedImage\"; // import { Component } from \"react\";\n// function InputForm() {\n//     return (\n//         <div>\n//             this is the form section\n//         </div>\n//     )\n// }\n\nclass InputForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      hours: \"\",\n      refName: \"\",\n      discription: \"\",\n      refContact: \"\",\n      year: \"2018\",\n      category: \"SCHOLARSHIP\",\n      isHighlight: false //image_:\"\"\n\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const experience = {\n        year,\n        category,\n        discription,\n        hours,\n        refName,\n        refContact,\n        isHighlight,\n        id: cuid()\n      }; //add all the form fields here\n      // console.log(\"jhgfhgfdhgfdhgf\")\n      // console.log(image_)\n      // const image={\n      //   uid,\n      //   eid,\n      //   iLink:image_,\n      //   id:cuid()\n      // }\n\n      this.props.createExperiece(this.experience); // fetch(\"http://localhost:8000/experiences/\", {\n      //   method: \"POST\",\n      //   headers: { \"Content-Type\": \"application/json\" },\n      //   body: JSON.stringify(experience),\n      // }).then(() => {\n      //   console.log(\"uploaded to server succesfully\");\n      //   //what to do next....eg: history.push('/');\n      // });\n      // fetch(\"//http://localhost:8000/images/\", {\n      //   method: \"POST\",\n      //   headers: { \"Content-Type\": \"application/json\" },\n      //   body: JSON.stringify(image),\n      // }).then(() => {\n      //   console.log(\"uploaded to server succesfully\");\n      //   //what to do next....eg: history.push('/');\n      // });\n    };\n  }\n\n  // useEffect(()=>{\n  //   console.log(\"this happened because of image\");\n  //   console.log(image_);\n  // },[image_])\n  render() {} // };\n\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createExperiece: experience => dispatch(createExperiece(experience))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(InputForm);","map":{"version":3,"sources":["/Users/leftee/Documents/GitHub/transcript_ashesi_/src/Components/SideForm/InputForm.js"],"names":["React","Component","useState","DragAndDrop","createExperiece","connect","cuid","Highlight","UploadedImage","InputForm","state","hours","refName","discription","refContact","year","category","isHighlight","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","experience","props","render","mapDispatchToProps","dispatch"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,eAAT,QAAgC,uCAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,iBAAP;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,aAAP,MAA0B,kBAA1B,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BS,KAF8B,GAExB;AACJC,MAAAA,KAAK,EAAC,EADF;AAEJC,MAAAA,OAAO,EAAC,EAFJ;AAGJC,MAAAA,WAAW,EAAC,EAHR;AAIJC,MAAAA,UAAU,EAAC,EAJP;AAKJC,MAAAA,IAAI,EAAC,MALD;AAMJC,MAAAA,QAAQ,EAAC,aANL;AAOJC,MAAAA,WAAW,EAAC,KAPR,CAQJ;;AARI,KAFwB;;AAAA,SAY9BC,YAZ8B,GAYhBC,CAAD,IAAK;AAChB,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAcH,CAAC,CAACE,MAAF,CAASE;AADX,OAAd;AAGD,KAhB6B;;AAAA,SAqDhCC,YArDgC,GAqDhBL,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACM,cAAF;AACA,YAAMC,UAAU,GAAG;AAEjBX,QAAAA,IAFiB;AAGjBC,QAAAA,QAHiB;AAIjBH,QAAAA,WAJiB;AAKjBF,QAAAA,KALiB;AAMjBC,QAAAA,OANiB;AAOjBE,QAAAA,UAPiB;AAQjBG,QAAAA,WARiB;AASjBK,QAAAA,EAAE,EAAChB,IAAI;AATU,OAAnB,CAFoB,CAcjB;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,WAAKqB,KAAL,CAAWvB,eAAX,CAA2B,KAAKsB,UAAhC,EAxBoB,CA2BpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,KAlG+B;AAAA;;AAoG9B;AACA;AACA;AACA;AACFE,EAAAA,MAAM,GAAE,CAEP,CA1G+B,CA4GlC;;;AA5GkC;;AA+GlC,MAAMC,kBAAkB,GAAEC,QAAD,IAAY;AAClC,SAAM;AACJ1B,IAAAA,eAAe,EAAGsB,UAAD,IAAcI,QAAQ,CAAC1B,eAAe,CAACsB,UAAD,CAAhB;AADnC,GAAN;AAGF,CAJD;;AAKA,eAAerB,OAAO,CAAC,IAAD,EAAMwB,kBAAN,CAAP,CAAiCpB,SAAjC,CAAf","sourcesContent":["import React,{ Component,useState} from \"react\";\nimport DragAndDrop from \"../DragAndDrop\";\nimport { createExperiece } from \"../../Redux/actions/experienceActions\";\nimport { connect } from \"react-redux\";\n// cuid is a simple library to generate unique IDs\nimport cuid from \"cuid\";\nimport \"./InputForm.css\";\nimport { Highlight } from \"@material-ui/icons\";\nimport UploadedImage from \"../UploadedImage\";\n// import { Component } from \"react\";\n\n// function InputForm() {\n//     return (\n//         <div>\n//             this is the form section\n//         </div>\n//     )\n// }\n\nclass InputForm extends Component {\n  // render=()=>()=>{\n    state={\n      hours:\"\",\n      refName:\"\",\n      discription:\"\",\n      refContact:\"\",\n      year:\"2018\",\n      category:\"SCHOLARSHIP\",\n      isHighlight:false,\n      //image_:\"\"\n    };\n    handleChange=(e)=>{\n      this.setState({\n        [e.target.id]:e.target.value\n      })\n    }\n  // const [discription, setDiscriptiion] = useState(\"\"); //add all the elemetns later\n  // const [hours, setHours] = useState(\"\");\n  // const [refName, setRefName] = useState(\"\");\n  // const [refContact, setRefContact] = useState(\"\");\n  // const [year, setYear] = useState(\"2018\");\n  // const [category, setCategory] = useState(\"SCHORLASHIP\");\n  // const [tempImage,setTempImage] = useState(\"\");\n\n  // const [isHighlight, setIsHighlight] = useState(false);\n  // const [isImage,setIsImage]=useState(false);\n  // const [image_, setImage] = useState([]); //   const [isHighlight, setHighlight] = useState(false); //false\n\n  // const onDrop = useCallback((acceptedFiles) => {\n  //   // Loop through accepted files\n  //   acceptedFiles.map((file) => {\n  //     // Initialize FileReader browser API\n  //     const reader = new FileReader();\n  //     // onload callback gets called after the reader reads the file data\n  //     reader.onload = function (e) {\n  //       // add the image into the state. Since FileReader reading process is asynchronous, its better to get the latest snapshot state (i.e., prevState) and update it.\n  //       setImage((prevState) => [\n  //         ...prevState,\n  //         { id: cuid(), src: e.target.result },\n  //       ]);\n  //       setIsImage(true);\n  //       //  console.log(image_);\n  //       setTempImage(e.target.result)\n\n  //     };\n  //     // Read the file as Data URL (since we accept only images)\n  //     reader.readAsDataURL(file);\n  //     // setIsImage(true);\n  //     return file;\n  //   });\n  // }, []);\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const experience = {\n \n      year,\n      category,\n      discription,\n      hours,\n      refName,\n      refContact,\n      isHighlight,\n      id:cuid()\n   \n      \n    }; //add all the form fields here\n    // console.log(\"jhgfhgfdhgfdhgf\")\n    // console.log(image_)\n    // const image={\n    //   uid,\n    //   eid,\n    //   iLink:image_,\n    //   id:cuid()\n\n    // }\n    this.props.createExperiece(this.experience)\n    \n\n    // fetch(\"http://localhost:8000/experiences/\", {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(experience),\n    // }).then(() => {\n    //   console.log(\"uploaded to server succesfully\");\n    //   //what to do next....eg: history.push('/');\n    // });\n\n    // fetch(\"//http://localhost:8000/images/\", {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(image),\n    // }).then(() => {\n    //   console.log(\"uploaded to server succesfully\");\n    //   //what to do next....eg: history.push('/');\n    // });\n\n  };\n\n    // useEffect(()=>{\n    //   console.log(\"this happened because of image\");\n    //   console.log(image_);\n    // },[image_])\n  render(){\n\n  }\n  \n// };\n  }\n  \nconst mapDispatchToProps=(dispatch)=>{\n   return{\n     createExperiece :(experience)=>dispatch(createExperiece(experience))\n   }\n}\nexport default connect(null,mapDispatchToProps)(InputForm);\n"]},"metadata":{},"sourceType":"module"}