{"ast":null,"code":"var _jsxFileName = \"/Users/leftee/Documents/GitHub/transcript_ashesi_/src/Components/DragAndDrop.js\";\nimport React, { useState } from \"react\"; //drag and drop code gotten from https://medium.com/@650egor/simple-drag-and-drop-file-upload-in-react-2cb409d88929\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DragAndDrop = () => {\n  state = {\n    drag: false\n  }; // const [drag,setDrag]=useState('fasle');\n\n  dropRef = /*#__PURE__*/React.createRef();\n\n  const handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDragIn = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.dragCounter++;\n\n    if (e.dataTransfer.items && e.dataTransfer.items.length == 1) {\n      this.setState({\n        drag: true\n      }); //   setDrag('true');\n    }\n  };\n\n  const handleDragOut = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.dragCounter--;\n\n    if (this.dragCounter === 0) {\n      this.setState({\n        drag: false\n      });\n    }\n  };\n\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.setState({\n      drag: false\n    });\n\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      this.props.handleDrop(e.dataTransfer.files);\n      e.dataTransfer.clearData();\n      this.dragCounter = 0;\n    }\n  };\n\n  const componentDidMount = () => {\n    let div = this.dropRef.current;\n    div.addEventListener(\"dragenter\", this.handleDragIn);\n    div.addEventListener(\"dragleave\", this.handleDragOut);\n    div.addEventListener(\"dragover\", this.handleDrag);\n    div.addEventListener(\"drop\", this.handleDrop);\n  };\n\n  const componentWillUnmount = () => {\n    let div = this.dropRef.current;\n    div.removeEventListener(\"dragenter\", this.handleDragIn);\n    div.removeEventListener(\"dragleave\", this.handleDragOut);\n    div.removeEventListener(\"dragover\", this.handleDrag);\n    div.removeEventListener(\"drop\", this.handleDrop);\n  }; //   render() {\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"inline-block\",\n      position: \"relative\"\n    },\n    ref: this.dropRef,\n    children: [this.state.dragging && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"dashed grey 4px\",\n        backgroundColor: \"rgba(255,255,255,.8)\",\n        position: \"absolute\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        zIndex: 9999\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"absolute\",\n          top: \"50%\",\n          right: 0,\n          left: 0,\n          textAlign: \"center\",\n          color: \"grey\",\n          fontSize: 36\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"drop here :)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), this.props.children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}; // return (\n//     <div>\n//     </div>\n// )\n\n_c = DragAndDrop;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragAndDrop\");","map":{"version":3,"sources":["/Users/leftee/Documents/GitHub/transcript_ashesi_/src/Components/DragAndDrop.js"],"names":["React","useState","DragAndDrop","state","drag","dropRef","createRef","handleDrag","e","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","length","setState","handleDragOut","handleDrop","files","props","clearData","componentDidMount","div","current","addEventListener","componentWillUnmount","removeEventListener","display","position","dragging","border","backgroundColor","top","bottom","left","right","zIndex","textAlign","color","fontSize","children"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n//drag and drop code gotten from https://medium.com/@650egor/simple-drag-and-drop-file-upload-in-react-2cb409d88929\nexport const DragAndDrop = () => {\n  state = {\n    drag: false,\n  };\n    // const [drag,setDrag]=useState('fasle');\n\n  dropRef = React.createRef();\n  const handleDrag = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const handleDragIn = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.dragCounter++;\n    if (e.dataTransfer.items && e.dataTransfer.items.length ==1) {\n      this.setState({ drag: true });\n    //   setDrag('true');\n    }\n  };\n  const handleDragOut = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.dragCounter--;\n    if (this.dragCounter === 0) {\n      this.setState({ drag: false });\n    }\n  };\n  const handleDrop = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.setState({ drag: false });\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      this.props.handleDrop(e.dataTransfer.files);\n      e.dataTransfer.clearData();\n      this.dragCounter = 0;\n    }\n  };\n  const componentDidMount = () => {\n    let div = this.dropRef.current;\n    div.addEventListener(\"dragenter\", this.handleDragIn);\n    div.addEventListener(\"dragleave\", this.handleDragOut);\n    div.addEventListener(\"dragover\", this.handleDrag);\n    div.addEventListener(\"drop\", this.handleDrop);\n  };\n  const componentWillUnmount = () => {\n    let div = this.dropRef.current;\n    div.removeEventListener(\"dragenter\", this.handleDragIn);\n    div.removeEventListener(\"dragleave\", this.handleDragOut);\n    div.removeEventListener(\"dragover\", this.handleDrag);\n    div.removeEventListener(\"drop\", this.handleDrop);\n  };\n  //   render() {\n  return (\n    <div\n      style={{ display: \"inline-block\", position: \"relative\" }}\n      ref={this.dropRef}\n    >\n      {this.state.dragging && (\n        <div\n          style={{\n            border: \"dashed grey 4px\",\n            backgroundColor: \"rgba(255,255,255,.8)\",\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            zIndex: 9999,\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"50%\",\n              right: 0,\n              left: 0,\n              textAlign: \"center\",\n              color: \"grey\",\n              fontSize: 36,\n            }}\n          >\n            <div>drop here :)</div>\n          </div>\n        </div>\n      )}\n      {this.props.children}\n    </div>\n  );\n};\n\n// return (\n//     <div>\n\n//     </div>\n// )\n"]},"metadata":{},"sourceType":"module"}